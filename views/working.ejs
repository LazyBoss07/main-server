<!-- 
<!DOCTYPE html> <html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Comparison Dashboard</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body { font-family: Arial, sans-serif; background-color: #f8f9fa; padding: 20px; }
        .section-title { 
            background-color: #007bff; color: white; padding: 10px; 
            font-size: 1.2rem; border-radius: 5px; margin-bottom: 10px;
        }
        .accordion-button { background-color: #e3f2fd; color: #333; font-weight: bold; }
        .accordion-button:hover { background-color: #bbdefb; }
        .accordion-body { background-color: white; padding: 10px; }
        .file-name { font-size: 0.9rem; color: #6c757d; font-weight: bold; }
        /* .highlight-diff { background-color: #ffdddd !important; border-left: 4px solid red; } */
        pre { background: #f8f9fa; padding: 10px; border-radius: 5px; }
    </style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const sections = document.querySelectorAll(".section-title");

        sections.forEach(section => {
            const sectionName = section.innerText.trim();
            const accordions = document.querySelectorAll(`[data-key="${sectionName}"]`);

            // Extract text content for comparison
            let values = [];
            accordions.forEach(body => values.push(body.innerText.trim()));

            // Find differences among values
            if (new Set(values).size > 1) { // If there are differences
                const highlightedValues = findDifferences(values);

                // Replace original content with highlighted content
                accordions.forEach((body, index) => {
                    body.innerHTML = highlightedValues[index]; 
                });
            }
        });

        /**
         * Finds character-level differences and wraps them in <span class="highlight-diff">
         */
        function findDifferences(values) {
            const baseValue = values[0]; // Use first value as reference
            let highlightedResults = values.map(value => highlightDiff(baseValue, value));
            return highlightedResults;
        }

        /**
         * Compares two strings and highlights differences
         */
        function highlightDiff(base, compare) {
            let result = "";
            let baseChars = base.split("");
            let compareChars = compare.split("");

            for (let i = 0; i < Math.max(baseChars.length, compareChars.length); i++) {
                if (baseChars[i] !== compareChars[i]) {
                    result += `<span class="highlight-diff">${compareChars[i] || ""}</span>`;
                } else {
                    result += compareChars[i] || "";
                }
            }
            return result;
        }
    });
</script>

<style>
    .highlight-diff { 
        background-color: yellow ; 
        font-weight: bold;
    }
</style>

</head>
<body>

    <div class="container">
        <h1 class="text-center mb-4">Data Comparison Dashboard</h1>

        <div class="accordion" id="accordionAll">
            <% 
                let allSections = new Set();
                extractedResults.forEach(result => {
                    Object.keys(result.extractedData).forEach(section => allSections.add(section));
                });

                allSections = Array.from(allSections);

                allSections.forEach((section, index) => { 
            %>
               
                <div class="section-title">
                    <%= section %>
                </div>

                <div class="accordion" id="accordion-<%= index %>">
                    <% extractedResults.forEach(result => { %>
                        <% if (result.extractedData[section] !== undefined) { %>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="heading-<%= index %>-<%= result.file %>">
                                    <button class="accordion-button collapsed" type="button"
                                            data-bs-toggle="collapse"
                                            data-bs-target="#collapse-<%= index %>-<%= result.file %>"
                                            aria-expanded="false"
                                            aria-controls="collapse-<%= index %>-<%= result.file %>">
                                        <span class="file-name"><%= result.file %></span>
                                    </button>
                                </h2>
                                <div id="collapse-<%= index %>-<%= result.file %>" class="accordion-collapse collapse"
                                     aria-labelledby="heading-<%= index %>-<%= result.file %>"
                                     data-bs-parent="#accordion-<%= index %>">
                                    <div class="accordion-body" data-key="<%= section %>">
                                        <% if (typeof result.extractedData[section] === 'object') { %>
                                            <pre><%= JSON.stringify(result.extractedData[section], null, 2) %></pre>
                                        <% } else { %>
                                            <%= result.extractedData[section] %>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    <% }) %>
                </div>
            <% }) %>
        </div>

    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

</body>
</html> -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Comparison Dashboard</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body { font-family: Arial, sans-serif; background-color: #f8f9fa; padding: 20px; }
        .section-title { 
            background-color: #007bff; color: white; padding: 10px; 
            font-size: 1.2rem; border-radius: 5px; margin-bottom: 10px;
        }
        .accordion-button { background-color: #e3f2fd; color: #333; font-weight: bold; }
        .accordion-button:hover { background-color: #bbdefb; }
        .accordion-body { background-color: white; padding: 10px; }
        .file-name { font-size: 0.9rem; color: #6c757d; font-weight: bold; }
        pre { background: #f8f9fa; padding: 10px; border-radius: 5px; }
    </style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const sections = document.querySelectorAll(".section-title");

        sections.forEach(section => {
            const sectionName = section.innerText.trim();
            const accordions = document.querySelectorAll(`[data-key="${sectionName}"]`);

            // Extract text content for comparison
            let values = [];
            accordions.forEach(body => values.push(body.innerText.trim()));

            // Find differences among values
            if (new Set(values).size > 1) { // If there are differences
                const highlightedValues = findDifferences(values);

                // Replace original content with highlighted content
                accordions.forEach((body, index) => {
                    body.innerHTML = highlightedValues[index]; 
                });
            }
        });

        /**
         * Finds character-level differences and wraps them in <span class="highlight-diff">
         */
        function findDifferences(values) {
            const baseValue = values[0]; // Use first value as reference
            let highlightedResults = values.map(value => highlightDiff(baseValue, value));
            return highlightedResults;
        }

        /**
         * Compares two strings and highlights differences
         */
        function highlightDiff(base, compare) {
            let result = "";
            let baseChars = base.split("");
            let compareChars = compare.split("");

            for (let i = 0; i < Math.max(baseChars.length, compareChars.length); i++) {
                if (baseChars[i] !== compareChars[i]) {
                    result += `<span class="highlight-diff">${compareChars[i] || ""}</span>`;
                } else {
                    result += compareChars[i] || "";
                }
            }
            return result;
        }
    });
</script>

<style>
    .highlight-diff { 
        background-color: yellow !important; 
        font-weight: bold;
    }
</style>

</head>
<body>

    <div class="container">
        <h1 class="text-center mb-4">Data Comparison Dashboard</h1>

        <div class="accordion" id="accordionAll">
            <% 
                let allSections = new Set();
                extractedResults.forEach(result => {
                    Object.keys(result.extractedData).forEach(section => allSections.add(section));
                });

                allSections = Array.from(allSections);

                allSections.forEach((section, index) => { 
            %>
               
                <div class="section-title">
                    <%= section %>
                </div>

                <div class="accordion" id="accordion-<%= index %>">
                    <% extractedResults.forEach(result => { %>
                        <% if (result.extractedData[section] !== undefined) { %>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="heading-<%= index %>-<%= result.file %>">
                                    <button class="accordion-button collapsed" type="button"
                                            data-bs-toggle="collapse"
                                            data-bs-target="#collapse-<%= index %>-<%= result.file %>"
                                            aria-expanded="false"
                                            aria-controls="collapse-<%= index %>-<%= result.file %>">
                                        <span class="file-name"><%= result.file %></span>
                                    </button>
                                </h2>
                                <div id="collapse-<%= index %>-<%= result.file %>" class="accordion-collapse collapse"
                                     aria-labelledby="heading-<%= index %>-<%= result.file %>"
                                     data-bs-parent="#accordion-<%= index %>">
                                    <div class="accordion-body" data-key="<%= section %>">
                                        <% if (typeof result.extractedData[section] === 'object') { %>
                                            <pre><%= JSON.stringify(result.extractedData[section], null, 2) %></pre>
                                        <% } else { %>
                                            <%= result.extractedData[section] %>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    <% }) %>
                </div>
            <% }) %>
        </div>

    </div>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

</body>
</html>
